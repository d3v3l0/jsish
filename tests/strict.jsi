#!/usr/local/bin/jsish

Interp.conf({maxDumpStack:0});
//var x = 1;
function foo() {
  x = 1;
}
try {
;   foo();
} catch(e) {
;   e;
}

for (var i = 1; i<10; i++)
    i++;

function bar() {
  var k = 1;
  for (var j of [1,2]) 
      k+=j;
}

bar();

function bar2() {
  var k = 1;
  for (j of [1,2]) 
      k+=j;
}
try {
;   bar2();
} catch(e) {
;   e;
}

function bar3() {
  k = 1;
  for (var j of [1,2]) 
      k+=j;
}

try {
;   bar3();
} catch(e) {
;   e;
}
function bar4() {
for (l = 1; l<10; l++)
    l++;
}
try {
;   bar4();
} catch(e) {
;   e;
}

function foo1() {}
foo1();
try {
;   foo1(1);
} catch(e) {
;   e;
}

function foo2(n) {}
try {
;   foo2();
} catch(e) {
;   e;
}
try {
;   foo2(1,2);
} catch(e) {
;   e;
}


function foo3(n:string) {}
try {
;   foo3();
} catch(e) {
;   e;
}
try {
;   foo3(1);
} catch(e) {
;   e;
}


function foo4(n:string='a') {}
foo4();
try {
;   foo4(1);
} catch(e) {
;   e;
}
try {
;   foo4('',1);
} catch(e) {
;   e;
}

function foo5(n='a') {}
foo5();
try {
;   foo5(1);
} catch(e) {
;   e;
}
try {
;   foo5('',1);
} catch(e) {
;   e;
}


function foo6(n='a',m=1) {}
foo6();
try {
;   foo6(1);
} catch(e) {
;   e;
}
try {
;   foo6('','');
} catch(e) {
;   e;
}

function foo7(...) {}
foo7();
foo7(1);
foo7(1,'a');

function foo8(n:number, ...) {}
foo8(1);
foo8(1,'a');
try {
;   foo8();
} catch(e) {
;   e;
}
try {
;   foo8('','');
} catch(e) {
;   e;
}

function foo9(n:number=2, ...) {}
foo9();
foo9(1);
foo9(1,'a','b');
try {
;   foo9(true);
} catch(e) {
;   e;
}
try {
;   foo9('','');
} catch(e) {
;   e;
}
function foo10(n:number='', ...) {}
foo10();
foo10(1);
foo10('a');
foo10(1,'a','b');
try {
;   foo10(null,'');
} catch(e) {
;   e;
}

var xyz;
function foo11(n:number=void) {}
try {
;   foo11(xyz);
} catch(e) {
;   e;
}
try {
;   foo11(9,'');
} catch(e) {
;   e;
}
var tc = Interp.conf('typeCheck');
tc.push('noundef');
Interp.conf({typeCheck:tc});

function foo12(n:number=9) {}
try {
;   foo12(xyz);
} catch(e) {
;   e;
}

//Don't test the rest because they not be caught: bad return and function with no return.
//function foo13(n:number=9):number {}
//foo13();
//try { foo13(); throw('failed'); } catch(e) { puts(e); }

//function foo14(n:number=9):number { }

/*
=!EXPECTSTART!=
foo() ==> e ==> function created global: "x"
bar2() ==> e ==> function created global: "j"
bar3() ==> e ==> function created global: "k"
bar4() ==> e ==> function created global: "l"
foo1(1) ==> undefined
foo2() ==> undefined
foo2(1,2) ==> undefined
foo3() ==> e ==> got 0 args, expected 1, calling function foo3(n:string)
foo3(1) ==> e ==> type mismatch for argument arg 1 'n': expected "string" but got "number", in call to 'foo3' declared at strict.jsi:78.2 <1>.
foo4(1) ==> e ==> type mismatch for argument arg 1 'n': expected "string" but got "number", in call to 'foo4' declared at strict.jsi:91.2 <1>.
foo4('',1) ==> e ==> got 2 args, expected 0-1, calling function foo4(n:string="a")
foo5(1) ==> e ==> type mismatch for argument arg 1 'n': expected "string" but got "number", in call to 'foo5' declared at strict.jsi:104.2 <1>.
foo5('',1) ==> e ==> got 2 args, expected 0-1, calling function foo5(n:string="a")
foo6(1) ==> e ==> type mismatch for argument arg 1 'n': expected "string" but got "number", in call to 'foo6' declared at strict.jsi:118.2 <1>.
foo6('','') ==> e ==> type mismatch for argument arg 2 'm': expected "number" but got "string", in call to 'foo6' declared at strict.jsi:118.2 <>.
foo8() ==> e ==> got 0 args, expected 1 or more, calling function foo8(n:number)
foo8('','') ==> e ==> type mismatch for argument arg 1 'n': expected "number" but got "string", in call to 'foo8' declared at strict.jsi:136.2 <>.
foo9(true) ==> e ==> type mismatch for argument arg 1 'n': expected "number" but got "boolean", in call to 'foo9' declared at strict.jsi:150.2 <true>.
foo9('','') ==> e ==> type mismatch for argument arg 1 'n': expected "number" but got "string", in call to 'foo9' declared at strict.jsi:150.2 <>.
foo10(null,'') ==> e ==> type mismatch for argument arg 1 'n': expected "number|string" but got "null", in call to 'foo10' declared at strict.jsi:164.7 <null>.
foo11(xyz) ==> e ==> call with undefined var for argument arg 1 'n', in call to 'foo11' declared at strict.jsi:176.2 <undefined>.
foo11(9,'') ==> e ==> got 2 args, expected 0-1, calling function foo11(n:number|void=undefined)
foo12(xyz) ==> e ==> type mismatch for argument arg 1 'n': expected "number" but got "undefined", in call to 'foo12' declared at strict.jsi:191.7 <undefined>.
=!EXPECTEND!=
*/
