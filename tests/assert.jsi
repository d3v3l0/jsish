#!/usr/local/bin/jsish -u %s
Interp.conf({log:{assert:true}});

;assert(true,'true');
;assert(2*3 == 6,'math');
try {
    assert(false,'false');
} catch(e) {
    puts('caught error');
}
;Interp.conf({log:{assert:false}});
var x;
;x = 1;
;assert(false,'false2');
;assert(false===true);
;Interp.conf({log:{assert:true}});

var i=1, j=2;
;assert(function () { return (i<j); },'fail');

try {
    assert(false==true);
} catch(e) {
    puts('caught error2: '+e);
}
try {
;   assert(false,'false');
} catch(e) {
    puts('caught error2: '+e);
}

;assert(false,'this assert failed',{mode:'puts', noStderr:true});

;Interp.conf({assertMode:'puts', noStderr:true});

;assert(true===false);
;assert(false,'assert also failed');


/*
=!EXPECTSTART!=
assert(true,'true') ==> undefined
assert(2*3 == 6,'math') ==> undefined
caught error
Interp.conf({log:{assert:false}}) ==> undefined
x = 1 ==> 1
assert(false,'false2') ==> undefined
assert(false===true) ==> undefined
Interp.conf({log:{assert:true}}) ==> undefined
assert(function () { return (i<j); },'fail') ==> undefined
caught error2: assert(false==true)
assert(false,'false') ==> caught error2: false
assert(false,'this assert failed',{mode:'puts', noStderr:true}) ==> this assert failed
undefined
Interp.conf({assertMode:'puts', noStderr:true}) ==> undefined
assert(true===false) ==> assert(true===false)`),puts(assert(true===false))
undefined
assert(false,'assert also failed') ==> assert also failed
undefined
=!EXPECTEND!=
*/
